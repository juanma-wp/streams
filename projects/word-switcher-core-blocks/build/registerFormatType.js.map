{"version":3,"file":"registerFormatType.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNwE;AACR;AAAA;AAEhE,MAAMK,yBAAyB,GAAG,qCAAqC;AAEvEJ,wEAAkB,CAACI,yBAAyB,EAAE;EAC7CC,KAAK,EAAE,eAAe;EACtBC,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE,eAAe;EAC1BC,IAAI,EAAEA,CAAC;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAM,CAAC,KAAK;IACxC,oBACCR,sDAAA,CAACF,0EAAqB;MACrBW,IAAI,EAAC,QAAQ;MACbP,KAAK,EAAC,4BAA4B;MAClCQ,OAAO,EAAEA,CAAA,KAAM;QACdH,QAAQ,CACPX,kEAAY,CAACY,KAAK,EAAE;UACnBG,IAAI,EAAEV;QACP,CAAC,CACF,CAAC;MACF,CAAE;MACFK,QAAQ,EAAEA;IAAS,CACnB,CAAC;EAEJ;AACD,CAAC,CAAC,C","sources":["webpack://word-switcher/external window [\"wp\",\"blockEditor\"]","webpack://word-switcher/external window [\"wp\",\"richText\"]","webpack://word-switcher/external window \"ReactJSXRuntime\"","webpack://word-switcher/webpack/bootstrap","webpack://word-switcher/webpack/runtime/compat get default export","webpack://word-switcher/webpack/runtime/define property getters","webpack://word-switcher/webpack/runtime/hasOwnProperty shorthand","webpack://word-switcher/webpack/runtime/make namespace object","webpack://word-switcher/./src/registerFormatType.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"richText\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { toggleFormat, registerFormatType } from \"@wordpress/rich-text\";\nimport { RichTextToolbarButton } from \"@wordpress/block-editor\";\n\nconst WORD_SWITCHER_FORMAT_TYPE = \"word-switcher/format-type-delimiter\";\n\nregisterFormatType(WORD_SWITCHER_FORMAT_TYPE, {\n\ttitle: \"Word Switcher\",\n\ttagName: \"span\",\n\tclassName: \"word-switcher\",\n\tedit: ({ isActive, onChange, value }) => {\n\t\treturn (\n\t\t\t<RichTextToolbarButton\n\t\t\t\ticon=\"update\"\n\t\t\t\ttitle=\"Mark as Word Switcher Area\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonChange(\n\t\t\t\t\t\ttoggleFormat(value, {\n\t\t\t\t\t\t\ttype: WORD_SWITCHER_FORMAT_TYPE,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\tisActive={isActive}\n\t\t\t/>\n\t\t);\n\t},\n});\n"],"names":["toggleFormat","registerFormatType","RichTextToolbarButton","jsx","_jsx","WORD_SWITCHER_FORMAT_TYPE","title","tagName","className","edit","isActive","onChange","value","icon","onClick","type"],"sourceRoot":""}